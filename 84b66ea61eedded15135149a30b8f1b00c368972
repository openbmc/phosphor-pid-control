{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3af97f03_fa0dd6f7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 10,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-11-11T00:28:50Z",
      "side": 1,
      "message": "Oh.. scaled RPM is actually PWM?",
      "range": {
        "startLine": 10,
        "startChar": 29,
        "endLine": 10,
        "endChar": 63
      },
      "revId": "84b66ea61eedded15135149a30b8f1b00c368972",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4b20067_cf7e8c3f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 10,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-11-11T00:38:57Z",
      "side": 1,
      "message": "Nope, scaled RPM is between (0.0, 1.0) range based on a preconfigured min and max from somewhere, and unscaled RPM is the raw RPM value from the hardware.",
      "parentUuid": "3af97f03_fa0dd6f7",
      "range": {
        "startLine": 10,
        "startChar": 29,
        "endLine": 10,
        "endChar": 63
      },
      "revId": "84b66ea61eedded15135149a30b8f1b00c368972",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f989b53_f50537dc",
        "filename": "pid/fancontroller.cpp",
        "patchSetId": 16
      },
      "lineNbr": 49,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-11-11T00:28:50Z",
      "side": 1,
      "message": "Would it be easier to prevent this bug if we call this value as unscaledRPM instead?",
      "range": {
        "startLine": 49,
        "startChar": 11,
        "endLine": 49,
        "endChar": 16
      },
      "revId": "84b66ea61eedded15135149a30b8f1b00c368972",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0b67cc1_923dfd9d",
        "filename": "pid/fancontroller.cpp",
        "patchSetId": 16
      },
      "lineNbr": 49,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-11-11T00:38:57Z",
      "side": 1,
      "message": "Nope, see above.",
      "parentUuid": "9f989b53_f50537dc",
      "range": {
        "startLine": 49,
        "startChar": 11,
        "endLine": 49,
        "endChar": 16
      },
      "revId": "84b66ea61eedded15135149a30b8f1b00c368972",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73c818d8_cc2fe67e",
        "filename": "pid/fancontroller.cpp",
        "patchSetId": 16
      },
      "lineNbr": 59,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-11-11T00:28:50Z",
      "side": 1,
      "message": "Do we need unit test coverage for these?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 59,
        "endChar": 0
      },
      "revId": "84b66ea61eedded15135149a30b8f1b00c368972",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fe712ed_dc8533fd",
        "filename": "pid/fancontroller.cpp",
        "patchSetId": 16
      },
      "lineNbr": 59,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-11-11T00:38:57Z",
      "side": 1,
      "message": "There\u0027s already unit test coverage here. I just added getCachedValues() to zone_mock.hpp, as a wrapper function for getCachedValue(), to avoid breaking many existing tests. There\u0027s already many tests of inputProc() in the pid_fancontroller_unittest.cpp file.",
      "parentUuid": "73c818d8_cc2fe67e",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 59,
        "endChar": 0
      },
      "revId": "84b66ea61eedded15135149a30b8f1b00c368972",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}