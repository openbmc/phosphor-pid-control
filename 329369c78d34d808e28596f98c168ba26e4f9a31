{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f5aa1ce1_ca1e4d98",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-11-07T05:43:50Z",
      "side": 1,
      "message": "Rebased master and fixed the conflict.\nPlease help to review again. Thanks!",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89e7dfa9_7506d902",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-12-01T01:02:46Z",
      "side": 1,
      "message": "These commit has been rebased many times and haven\u0027t been merged.\nPlease help to review. Thanks.",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7cd8429_0bc421d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-12-05T10:30:37Z",
      "side": 1,
      "message": "Sorry for the delay. It\u0027s true that this has taken a long time. I have no further objections that are significant enough to delay this further.",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "670c800a_01f3b02c",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 39,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-12T18:11:11Z",
      "side": 1,
      "message": "The unfortunate side-effect of this patch is we end up with code that isn\u0027t compiled by default in CI.  Is there any way to consolidate the two sides of this #ifdef in a way where the configuration option can be dropped.  Why does this behavior need to be two different compile options rather than specified in the JSON?",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a79b51d5_697cd6ff",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 39,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-01-08T10:55:02Z",
      "side": 1,
      "message": "Revised to use `checkHysterWithSetpt` flag in pid info.",
      "parentUuid": "670c800a_01f3b02c",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "266b1fa4_cc51aba6",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 39,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2024-01-10T02:55:08Z",
      "side": 1,
      "message": "Please mark this as Resolved if it\u0027s fixed.",
      "parentUuid": "a79b51d5_697cd6ff",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22cd7d99_94671094",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 39,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-01-10T05:32:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "266b1fa4_cc51aba6",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cdcfa6f_f8f6a704",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 79,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-12T18:11:11Z",
      "side": 1,
      "message": "This part of the change isn\u0027t obvious.  `NaN` is an explicit value which we use elsewhere for \"undefined\" and that is what the comment on line 78 suggests.  You\u0027ve changed it to \"not finite\" which means that infinite values are now also covered.  It gives the impression that that fixes something you\u0027ve not documented.",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df684ef4_4b7204ee",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 79,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-01-08T10:55:02Z",
      "side": 1,
      "message": "Modified the annotation.",
      "parentUuid": "5cdcfa6f_f8f6a704",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c69a6018_1b55552f",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 79,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2024-01-10T02:55:08Z",
      "side": 1,
      "message": "Please mark this as Resolved if it\u0027s fixed.",
      "parentUuid": "df684ef4_4b7204ee",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ae2233d_b0e8d847",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 79,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-01-10T05:32:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c69a6018_1b55552f",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deb82697_7dbf3ed2",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 117,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-12T18:11:11Z",
      "side": 1,
      "message": "It isn\u0027t obvious why you\u0027ve chosen `lowest` over `min`.\n\nWhat if input is non-finite or NaN?",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5988bae_eeca6248",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 117,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-12-12T18:16:42Z",
      "side": 1,
      "message": "Agreed, this looks like a magic number flag. This is something that is explicitly not needed with floating-point numbers, as we have `NaN` to indicate \"not available\" or \"not initialized yet\". Please use these instead.",
      "parentUuid": "deb82697_7dbf3ed2",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea03de86_ea4d8b74",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 117,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-01-08T10:55:02Z",
      "side": 1,
      "message": "Revised to use min.",
      "parentUuid": "a5988bae_eeca6248",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "386ad670_19ecdfbd",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 117,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2024-01-10T02:55:08Z",
      "side": 1,
      "message": "I still don\u0027t like the idea of using `min()` or `max()` as flag values here, to indicate uninitialized input. Please use `NaN` as a sentinel/placeholder value as required. Use `std::numeric_limits\u003cdouble\u003e::quiet_NaN()` as an initializer. This is what is already being done by the rest of the program, to indicate invalid/uninitialized/empty values safely. Please use `isfinite()` to test for validity.",
      "parentUuid": "ea03de86_ea4d8b74",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a727f862_2f1ccb2e",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 117,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-01-10T06:05:42Z",
      "side": 1,
      "message": "The purpose to use `lowest()` and `max()` is that the initial value set in `ThermalController::inputProc` is `std::numeric_limits\u003cdouble\u003e::max()` or `std::numeric_limits\u003cdouble\u003e::lowest()`.\n\nDo you think that we need to check if the `input` from `ThermalController::inputProc` is valid here?",
      "parentUuid": "386ad670_19ecdfbd",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92456c24_6d7674c4",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 117,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-01-16T01:44:18Z",
      "side": 1,
      "message": "Hi Josh,\nWould like to ask do you have any suggestions about this.",
      "parentUuid": "a727f862_2f1ccb2e",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e0aafcc_84ba8a0f",
        "filename": "pid/pidcontroller.cpp",
        "patchSetId": 26
      },
      "lineNbr": 117,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-01-23T09:12:01Z",
      "side": 1,
      "message": "Since the input from both `ThermalController::inputProc` and `FanController::inputProc` have been checked with `isfinite()`.\nAnd the input would be set with setpoint if the value is not acceptable in `ThermalController::inputProc`.\nTherefore, removed the conditional here.",
      "parentUuid": "92456c24_6d7674c4",
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7d9001a_ebe4a9b0",
        "filename": "pid/pidcontroller.hpp",
        "patchSetId": 26
      },
      "lineNbr": 76,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-12T18:11:11Z",
      "side": 1,
      "message": "Why is const added here?  This has no bearing on the ABI or API since these doubles are POD.",
      "range": {
        "startLine": 76,
        "startChar": 24,
        "endLine": 76,
        "endChar": 29
      },
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "702ecdee_84f3a706",
        "filename": "pid/pidcontroller.hpp",
        "patchSetId": 26
      },
      "lineNbr": 76,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-12-12T18:16:42Z",
      "side": 1,
      "message": "Agreed, and these doubles are being passed in by copy, so `const` here has no effect, and needlessly constrains the caller.",
      "parentUuid": "d7d9001a_ebe4a9b0",
      "range": {
        "startLine": 76,
        "startChar": 24,
        "endLine": 76,
        "endChar": 29
      },
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e57d3a6c_225f6882",
        "filename": "pid/pidcontroller.hpp",
        "patchSetId": 26
      },
      "lineNbr": 76,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-01-08T10:55:02Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "702ecdee_84f3a706",
      "range": {
        "startLine": 76,
        "startChar": 24,
        "endLine": 76,
        "endChar": 29
      },
      "revId": "329369c78d34d808e28596f98c168ba26e4f9a31",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}