{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "89901a68_d8ed938f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 36
      },
      "lineNbr": 0,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-06-09T07:50:41Z",
      "side": 1,
      "message": "Looking good so far!",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baa97e29_bc5d554f",
        "filename": "dbus/dbusconfiguration.cpp",
        "patchSetId": 36
      },
      "lineNbr": 416,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-06-09T07:50:41Z",
      "side": 1,
      "message": "I am curious why a bus is now created on-the-fly in this function, instead of having it passed in from outside this function. Is there now more than one bus created? I thought it was a global singleton.",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f50219f_1e4eed5e",
        "filename": "dbus/dbusconfiguration.cpp",
        "patchSetId": 36
      },
      "lineNbr": 416,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2023-06-09T08:28:33Z",
      "side": 1,
      "message": "Hmm.....Seems can become global. I will check this.",
      "parentUuid": "baa97e29_bc5d554f",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ddcb25a_3474cac2",
        "filename": "dbus/dbusconfiguration.cpp",
        "patchSetId": 36
      },
      "lineNbr": 416,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2023-06-14T08:26:25Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "9f50219f_1e4eed5e",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6dbf928_d3c93fa3",
        "filename": "main.cpp",
        "patchSetId": 36
      },
      "lineNbr": 340,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-06-09T07:50:41Z",
      "side": 1,
      "message": "Good catch removing objManager, it was created but never used! I am curious, is calling add_manager() the same thing as creating a manager_t object? Or, does it have different behavior?",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c144e94_77295ca6",
        "filename": "main.cpp",
        "patchSetId": 36
      },
      "lineNbr": 340,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2023-06-09T08:28:33Z",
      "side": 1,
      "message": "If using the original method, I can\u0027t create a new interface and property(maybe I didn\u0027t find the right way to create). So I change to this add_manager() method.\n```\n        zoneControlIntf \u003d modeControlServer.add_unique_interface(\n            objPath, \"xyz.openbmc_project.Control.Zone\");\n        zoneControlIntf-\u003eregister_property(\"Leader\", std::string(\"\"));\n        if (!zoneControlIntf-\u003einitialize())\n        {\n            std::cerr \u003c\u003c \"Failed to initialize Control.Zone interface\\n\";\n        }\n```",
      "parentUuid": "e6dbf928_d3c93fa3",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4fa824d_ca7de71f",
        "filename": "pid/builder.cpp",
        "patchSetId": 36
      },
      "lineNbr": 59,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-06-09T07:50:41Z",
      "side": 1,
      "message": "Same question as in init() earlier. Why create a new bus inside this function, instead of using the global singleton?",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c7121ad_384bc501",
        "filename": "pid/builder.cpp",
        "patchSetId": 36
      },
      "lineNbr": 59,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2023-06-09T08:28:33Z",
      "side": 1,
      "message": "Same. I will check this.",
      "parentUuid": "e4fa824d_ca7de71f",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e17613fa_749d00a3",
        "filename": "pid/builder.cpp",
        "patchSetId": 36
      },
      "lineNbr": 59,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2023-06-14T08:26:25Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "7c7121ad_384bc501",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11190922_57a8dd10",
        "filename": "pid/zone.cpp",
        "patchSetId": 36
      },
      "lineNbr": 281,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-06-09T07:50:41Z",
      "side": 1,
      "message": "This is really good. I am also looking forward to adding some of the other parameters mentioned in https://github.com/openbmc/phosphor-pid-control/issues/27 to this new interface, such as Input and Setpoint and Output numeric properties. (In situations with more than one input, choose the input that comes from the Leader.) I might do this as a second patch that follows this patch.",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c648884c_210a221f",
        "filename": "pid/zone.cpp",
        "patchSetId": 36
      },
      "lineNbr": 281,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2023-06-09T08:28:33Z",
      "side": 1,
      "message": "OK, I will move the code about creating new interface and property to another PR.",
      "parentUuid": "11190922_57a8dd10",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a94fae81_9be060fd",
        "filename": "pid/zone.cpp",
        "patchSetId": 36
      },
      "lineNbr": 281,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2023-06-14T08:26:25Z",
      "side": 1,
      "message": "My misunderstanding. Ack.",
      "parentUuid": "c648884c_210a221f",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6aaf4a64_45b1aa1b",
        "filename": "pid/zone.hpp",
        "patchSetId": 36
      },
      "lineNbr": 62,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-06-14T22:54:41Z",
      "side": 1,
      "message": "`xyz.openbmc_project.Control.Zone` first needs to be specified in a patch to phosphor-dbus-interfaces, that way there\u0027s community visibility of this new interface. The patch needs to be merged (indicating consensus) before we can add the interface in the application.",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01c29b8d_3da7d04d",
        "filename": "pid/zone.hpp",
        "patchSetId": 36
      },
      "lineNbr": 62,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-06-14T23:40:34Z",
      "side": 1,
      "message": "Yes, we should do it right, even though it takes longer.\n\nAt the same time, we can get all the ideas in https://github.com/openbmc/phosphor-pid-control/issues/27 in there: `Leader`, `Input`, and `Output`. Since it is difficult to change an interface once committed, we should get it right the first time, even though the code might not be ready to implement all of those fields yet.",
      "parentUuid": "6aaf4a64_45b1aa1b",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d714d203_577b1966",
        "filename": "test/pid_zone_unittest.cpp",
        "patchSetId": 36
      },
      "lineNbr": 108,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-06-09T07:50:41Z",
      "side": 1,
      "message": "This is clever logic, but I am curious why the need for appname. Since this is test code, can the name just be hardcoded for testing purposes? Or, is program_invocation_name required somehow? Unfortunately, the testing infrastructure hides main() from us, so we can\u0027t just easily take the classic argv[0].",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12403286_18c630f3",
        "filename": "test/pid_zone_unittest.cpp",
        "patchSetId": 36
      },
      "lineNbr": 108,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2023-06-09T08:28:33Z",
      "side": 1,
      "message": "Because many test case call this \"PidZoneTest\" class. So if hardcore fullPath, the dbusTestName dbus path will become the same. systemBus-\u003erequest_name will be failed(name exist) when running all test case.",
      "parentUuid": "d714d203_577b1966",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5e13044_9ca185e9",
        "filename": "test/pid_zone_unittest.cpp",
        "patchSetId": 36
      },
      "lineNbr": 164,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-06-09T07:50:41Z",
      "side": 1,
      "message": "It is good that the new D-Bus object is set up here for testing, but I do not see any actual uses of it added. Would it be possible to add a test for Leader?",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d5f7738_6485054f",
        "filename": "test/pid_zone_unittest.cpp",
        "patchSetId": 36
      },
      "lineNbr": 164,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2023-06-09T08:28:33Z",
      "side": 1,
      "message": "objectServer is as input parameter to DbusPidZone to create new interface and property. I will try to add a test.",
      "parentUuid": "b5e13044_9ca185e9",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f58b4a3e_6e92400f",
        "filename": "test/pid_zone_unittest.cpp",
        "patchSetId": 36
      },
      "lineNbr": 164,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2023-06-14T08:26:25Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "7d5f7738_6485054f",
      "revId": "d66cca6d8cc7aacb7cd3bbde2ec523ea2aea1e34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}