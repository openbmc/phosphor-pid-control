{
  "comments": [
    {
      "key": {
        "uuid": "1c699ee8_91c05694",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-25T23:24:58Z",
      "side": 1,
      "message": "More details needed here.  Why is 10 millisecond too much?  Why is 1 usecond enough?  Why not 0 (no delay) why not 5 milliseconds?\n\nWhat breaks when this is set today?",
      "revId": "8fbd58c7b277f4898e6e30a066cb7c42aaa86ad6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a9722f8_c1457690",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000857
      },
      "writtenOn": "2021-03-25T23:34:56Z",
      "side": 1,
      "message": "Actually 0 delay is desired. but I cannot find document of the exact behavior of delay \u003d 0. Does the timer put the callback in the execution queue or expired queue? Or the behavior is undefined. \n\nSo I just put a small enough value here just in case. \n\nIf delay\u003d0 is clear, I am glad to use that. \n\nBreak refer to: https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-objmgr/+/41563",
      "parentUuid": "1c699ee8_91c05694",
      "revId": "8fbd58c7b277f4898e6e30a066cb7c42aaa86ad6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "060eafda_1e4a8212",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-25T23:39:10Z",
      "side": 1,
      "message": "If 0 is what we really want, we should rearrange the code such that we don\u0027t start the timer at all before initializing the loops, and only run the timer if it fails.\n\nAssuming this is an issue, 1usec makes it just a lot less likely, you need something that\u0027s completely interlocked.",
      "parentUuid": "1a9722f8_c1457690",
      "revId": "8fbd58c7b277f4898e6e30a066cb7c42aaa86ad6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da49ad8c_b8be8f2f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000857
      },
      "writtenOn": "2021-03-25T23:50:49Z",
      "side": 1,
      "message": "\u003e If 0 is what we really want, we should rearrange the code such that we don\u0027t start the timer at all before initializing the loops, and only run the timer if it fails.\n\nOk. Sounds reasonable. Originally I didn\u0027t expect such delay will create any trouble trading for neat code. \n\n\u003e Assuming this is an issue, 1usec makes it just a lot less likely, you need something that\u0027s completely interlocked.\n\nThat is why I also proposed this fix (https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-objmgr/+/41563). The ObjectMapper shouldn\u0027t be so sensitive to implementation of other modules/processes.",
      "parentUuid": "060eafda_1e4a8212",
      "revId": "8fbd58c7b277f4898e6e30a066cb7c42aaa86ad6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}